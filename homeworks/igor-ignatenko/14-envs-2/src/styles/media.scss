@media (max-width: 750px) {
  .keker {
    margin: 20px 10px;
  }
  .wrapper {
    grid-template-columns: 1fr;
    grid-template-rows: 220px 1fr 1fr;
    grid-template-areas:
      "header"
      "aside"
      "content";
    box-shadow: 0px 0px 15px 7px black;
  }

  .header {
    top: 0;
    bottom: 0;
    grid-area: header;
    color: #fff;
    display: flex;
    flex-direction: column;
    grid-template-columns: 1fr 1fr;
    align-content: center;
    justify-content: space-around;

    &__title {
      font-size: 1.1rem;
    }
  }

  .avatar-box__container {
    width: 100px;
    height: 100px;
  }
}

// /*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/
